{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { Message } from 'element-ui';\nexport default {\n  name: 'WelcomePage',\n  data() {\n    return {\n      form: {\n        name: '',\n        email: '',\n        stream: '',\n        knowledgeLevel: '',\n        fpsId: ''\n      },\n      streamList: [{\n        value: 'cantonese',\n        label: 'Cantonese'\n      }, {\n        value: 'mandarin',\n        label: 'Mandarin'\n      }],\n      knowledgeList: [{\n        value: 'beginner',\n        label: 'Beginner'\n      }, {\n        value: 'intermediate',\n        label: 'Intermediate'\n      }, {\n        value: 'professional',\n        label: 'Professional'\n      }, {\n        value: 'native',\n        label: 'Native'\n      }],\n      rules: {\n        name: [{\n          required: true,\n          message: 'Please input your name',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: 'Please input your email',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: 'Please input a valid email address',\n          trigger: ['blur', 'change']\n        }],\n        stream: [{\n          required: true,\n          message: 'Please select one stream',\n          trigger: 'blur'\n        }],\n        knowledgeLevel: [{\n          required: true,\n          message: 'Please select a knowledge level',\n          trigger: 'change'\n        }],\n        fpsId: [{\n          required: true,\n          message: 'Please input your FPS ID',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    async submitForm() {\n      this.$refs.form.validate(async valid => {\n        if (valid) {\n          const dto = {\n            name: this.form.name,\n            email: this.form.email,\n            stream: this.form.stream,\n            knowledgeLevel: this.form.knowledgeLevel,\n            fpsId: this.form.fpsId\n          };\n          try {\n            console.log(this.form);\n            console.log(dto);\n            const response = await axios.post('http://localhost:8080/Verifie/verify-identity', dto);\n            if (response.status === 200) {\n              console.log(\"success\");\n              this.$router.push('/rating-page'); // 成功时跳转到成功页面\n            } else {\n              MessageBox.alert('All items must be rated before submitting.', 'Error', {\n                confirmButtonText: 'OK',\n                showClose: false,\n                type: 'warning'\n              });\n            }\n          } catch (error) {\n            console.error('There was an error!', error);\n          }\n        } else {\n          console.log('Form validation failed');\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","Message","name","data","form","email","stream","knowledgeLevel","fpsId","streamList","value","label","knowledgeList","rules","required","message","trigger","type","methods","submitForm","$refs","validate","valid","dto","console","log","response","post","status","$router","push","MessageBox","alert","confirmButtonText","showClose","error"],"sources":["src/components/WelcomePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-page\">\r\n    <h1 class=\"title\">Welcome to Participate in the Word Complexity Rating Project!</h1>\r\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"form\" label-width=\"140px\" class=\"form-container\">\r\n      <el-form-item label=\"Name\" prop=\"name\">\r\n        <el-input v-model=\"form.name\" placeholder=\"Your full legal name\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"Email\" prop=\"email\">\r\n        <el-input v-model=\"form.email\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"Stream\" prop=\"stream\">\r\n        <el-select v-model=\"form.stream\" placeholder=\"Select\">\r\n          <el-option\r\n            v-for=\"item in streamList\"\r\n            :key=\"item.value\"\r\n            :label=\"item.label\"\r\n            :value=\"item.value\"\r\n          ></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"Knowledge Level\" prop=\"knowledgeLevel\">\r\n        <el-select v-model=\"form.knowledgeLevel\" placeholder=\"Select\">\r\n          <el-option\r\n              v-for=\"item in knowledgeList\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\"\r\n          ></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"FPS ID\" prop=\"fpsId\">\r\n        <el-input v-model=\"form.fpsId\" placeholder=\"Enter and check carefully, as this will be used for salary payment.\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button level=\"primary\" @click=\"submitForm\">Submit</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { Message } from 'element-ui';\r\n\r\nexport default {\r\n  name: 'WelcomePage',\r\n  data() {\r\n    return {\r\n      form: {\r\n        name: '',\r\n        email: '',\r\n        stream: '',\r\n        knowledgeLevel: '',\r\n        fpsId: ''\r\n      },\r\n      streamList: [\r\n        { value: 'cantonese', label: 'Cantonese' },\r\n        { value: 'mandarin', label: 'Mandarin' }\r\n      ],\r\n      knowledgeList: [\r\n        { value: 'beginner', label: 'Beginner' },\r\n        { value: 'intermediate', label: 'Intermediate' },\r\n        { value: 'professional', label: 'Professional' },\r\n        { value: 'native', label: 'Native' }\r\n      ],\r\n      rules: {\r\n        name: [\r\n          { required: true, message: 'Please input your name', trigger: 'blur' }\r\n        ],\r\n        email: [\r\n          { required: true, message: 'Please input your email', trigger: 'blur' },\r\n          { type: 'email', message: 'Please input a valid email address', trigger: ['blur', 'change'] }\r\n        ],\r\n        stream: [\r\n          { required: true, message: 'Please select one stream', trigger: 'blur' }\r\n        ],\r\n        knowledgeLevel: [\r\n          { required: true, message: 'Please select a knowledge level', trigger: 'change' }\r\n        ],\r\n        fpsId: [\r\n          { required: true, message: 'Please input your FPS ID', trigger: 'blur' }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    async submitForm() {\r\n      this.$refs.form.validate(async (valid) => {\r\n        if (valid) {\r\n\r\n          const dto = {\r\n           name: this.form.name,\r\n           email: this.form.email,\r\n           stream: this.form.stream,\r\n           knowledgeLevel: this.form.knowledgeLevel,\r\n           fpsId: this.form.fpsId\r\n         };\r\n          try {\r\n            console.log(this.form);\r\n            console.log(dto);\r\n            const response = await axios.post('http://localhost:8080/Verifie/verify-identity', dto);\r\n            if (response.status === 200) {\r\n              console.log(\"success\");\r\n              this.$router.push('/rating-page'); // 成功时跳转到成功页面\r\n            } else {\r\n              MessageBox.alert('All items must be rated before submitting.', 'Error', {\r\n                  confirmButtonText: 'OK',\r\n                  showClose: false,\r\n                  type: 'warning'\r\n                });\r\n            }\r\n\r\n          } catch (error) {\r\n            console.error('There was an error!', error);\r\n          }\r\n        } else {\r\n          console.log('Form validation failed');\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.title {\r\n  text-align: left;\r\n  width: 40%; /* Adjust width as needed */\r\n  margin-bottom: 20px;\r\n  line-height: 2.0;\r\n  font-size: 30px;\r\n}\r\n\r\n.login-page {\r\n  height: 100vh; /* Full viewport height */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.form-container {\r\n  width: 600px; /* Adjust width as needed */\r\n  padding: 20px;\r\n  background-color: #ffffff; /* White background for form */\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1); /* Optional: Add a shadow */\r\n}\r\n\r\n.form-container h1 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":";AAyCA,OAAAA,KAAA;AACA,SAAAC,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;QACAF,IAAA;QACAG,KAAA;QACAC,MAAA;QACAC,cAAA;QACAC,KAAA;MACA;MACAC,UAAA,GACA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,EACA;MACAC,aAAA,GACA;QAAAF,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,EACA;MACAE,KAAA;QACAX,IAAA,GACA;UAAAY,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAX,KAAA,GACA;UAAAS,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,IAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAV,MAAA,GACA;UAAAQ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAT,cAAA,GACA;UAAAO,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAR,KAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAE,OAAA;IACA,MAAAC,WAAA;MACA,KAAAC,KAAA,CAAAhB,IAAA,CAAAiB,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UAEA,MAAAC,GAAA;YACArB,IAAA,OAAAE,IAAA,CAAAF,IAAA;YACAG,KAAA,OAAAD,IAAA,CAAAC,KAAA;YACAC,MAAA,OAAAF,IAAA,CAAAE,MAAA;YACAC,cAAA,OAAAH,IAAA,CAAAG,cAAA;YACAC,KAAA,OAAAJ,IAAA,CAAAI;UACA;UACA;YACAgB,OAAA,CAAAC,GAAA,MAAArB,IAAA;YACAoB,OAAA,CAAAC,GAAA,CAAAF,GAAA;YACA,MAAAG,QAAA,SAAA1B,KAAA,CAAA2B,IAAA,kDAAAJ,GAAA;YACA,IAAAG,QAAA,CAAAE,MAAA;cACAJ,OAAA,CAAAC,GAAA;cACA,KAAAI,OAAA,CAAAC,IAAA;YACA;cACAC,UAAA,CAAAC,KAAA;gBACAC,iBAAA;gBACAC,SAAA;gBACAjB,IAAA;cACA;YACA;UAEA,SAAAkB,KAAA;YACAX,OAAA,CAAAW,KAAA,wBAAAA,KAAA;UACA;QACA;UACAX,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}