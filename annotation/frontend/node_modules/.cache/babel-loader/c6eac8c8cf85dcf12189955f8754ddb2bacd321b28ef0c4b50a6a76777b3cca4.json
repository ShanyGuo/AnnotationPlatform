{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { MessageBox } from 'element-ui';\nexport default {\n  name: 'WelcomePage',\n  data() {\n    return {\n      userName: '',\n      fpsId: '',\n      form: {\n        name: '',\n        email: '',\n        stream: '',\n        knowledgeLevel: '',\n        fpsId: ''\n      },\n      streamList: [{\n        value: 'cantonese',\n        label: 'Cantonese'\n      }, {\n        value: 'mandarin',\n        label: 'Mandarin'\n      }],\n      knowledgeList: [{\n        value: 'beginner',\n        label: 'Beginner'\n      }, {\n        value: 'intermediate',\n        label: 'Intermediate'\n      }, {\n        value: 'professional',\n        label: 'Professional'\n      }, {\n        value: 'native',\n        label: 'Native'\n      }],\n      rules: {\n        name: [{\n          required: true,\n          message: 'Please input your name',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: 'Please input your email',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: 'Please input a valid email address',\n          trigger: ['blur', 'change']\n        }],\n        stream: [{\n          required: true,\n          message: 'Please select one stream',\n          trigger: 'blur'\n        }],\n        knowledgeLevel: [{\n          required: true,\n          message: 'Please select a knowledge level',\n          trigger: 'change'\n        }],\n        fpsId: [{\n          required: true,\n          message: 'Please input your FPS ID',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    async submitForm() {\n      this.$refs.form.validate(async valid => {\n        if (valid) {\n          const dto = {\n            name: this.form.name,\n            email: this.form.email,\n            stream: this.form.stream,\n            knowledgeLevel: this.form.knowledgeLevel,\n            fpsId: this.form.fpsId\n          };\n          try {\n            console.log(this.form);\n            console.log(dto);\n            const response = await axios.post('http://localhost:8080/Verifie/verify-identity', dto);\n            if (response.status === 200) {\n              console.log(\"success\");\n              localStorage.setItem('cachedUserName', this.form.name);\n              localStorage.setItem('cachedFpsId', this.form.fpsId);\n              this.$router.push('/rating-page'); // 成功时跳转到成功页面\n            } else {\n              MessageBox.alert('User Invalid', 'Error', {\n                confirmButtonText: 'OK',\n                showClose: false,\n                type: 'warning'\n              });\n            }\n          } catch (error) {\n            console.error('There was an error!', error);\n          }\n        } else {\n          console.log('Form validation failed');\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","MessageBox","name","data","userName","fpsId","form","email","stream","knowledgeLevel","streamList","value","label","knowledgeList","rules","required","message","trigger","type","methods","submitForm","$refs","validate","valid","dto","console","log","response","post","status","localStorage","setItem","$router","push","alert","confirmButtonText","showClose","error"],"sources":["src/components/WelcomePage.vue"],"sourcesContent":["<template>\n  <div class=\"login-page\">\n    <h1 class=\"title\">Welcome to Participate in the Word Complexity Rating Project!</h1>\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"form\" label-width=\"140px\" class=\"form-container\">\n      <el-form-item label=\"Name\" prop=\"name\">\n        <el-input v-model=\"form.name\" placeholder=\"Your full legal name\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"Email\" prop=\"email\">\n        <el-input v-model=\"form.email\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"Stream\" prop=\"stream\">\n        <el-select v-model=\"form.stream\" placeholder=\"Select\">\n          <el-option\n            v-for=\"item in streamList\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\"\n          ></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"Knowledge Level\" prop=\"knowledgeLevel\">\n        <el-select v-model=\"form.knowledgeLevel\" placeholder=\"Select\">\n          <el-option\n              v-for=\"item in knowledgeList\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n          ></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"FPS ID\" prop=\"fpsId\">\n        <el-input v-model=\"form.fpsId\" placeholder=\"Enter and check carefully, as this will be used for salary payment.\"></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button level=\"primary\" @click=\"submitForm\">Submit</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { MessageBox } from 'element-ui';\n\nexport default {\n  name: 'WelcomePage',\n  data() {\n    return {\n      userName: '',\n      fpsId: '',\n      form: {\n        name: '',\n        email: '',\n        stream: '',\n        knowledgeLevel: '',\n        fpsId: ''\n      },\n      streamList: [\n        { value: 'cantonese', label: 'Cantonese' },\n        { value: 'mandarin', label: 'Mandarin' }\n      ],\n      knowledgeList: [\n        { value: 'beginner', label: 'Beginner' },\n        { value: 'intermediate', label: 'Intermediate' },\n        { value: 'professional', label: 'Professional' },\n        { value: 'native', label: 'Native' }\n      ],\n      rules: {\n        name: [\n          { required: true, message: 'Please input your name', trigger: 'blur' }\n        ],\n        email: [\n          { required: true, message: 'Please input your email', trigger: 'blur' },\n          { type: 'email', message: 'Please input a valid email address', trigger: ['blur', 'change'] }\n        ],\n        stream: [\n          { required: true, message: 'Please select one stream', trigger: 'blur' }\n        ],\n        knowledgeLevel: [\n          { required: true, message: 'Please select a knowledge level', trigger: 'change' }\n        ],\n        fpsId: [\n          { required: true, message: 'Please input your FPS ID', trigger: 'blur' }\n        ]\n      }\n    };\n  },\n  methods: {\n    async submitForm() {\n      this.$refs.form.validate(async (valid) => {\n        if (valid) {\n\n          const dto = {\n           name: this.form.name,\n           email: this.form.email,\n           stream: this.form.stream,\n           knowledgeLevel: this.form.knowledgeLevel,\n           fpsId: this.form.fpsId\n         };\n          try {\n            console.log(this.form);\n            console.log(dto);\n            const response = await axios.post('http://localhost:8080/Verifie/verify-identity', dto);\n            if (response.status === 200) {\n              console.log(\"success\");\n              localStorage.setItem('cachedUserName', this.form.name);\n              localStorage.setItem('cachedFpsId', this.form.fpsId);\n              this.$router.push('/rating-page'); // 成功时跳转到成功页面\n            } else {\n              MessageBox.alert('User Invalid', 'Error', {\n                  confirmButtonText: 'OK',\n                  showClose: false,\n                  type: 'warning'\n                });\n            }\n\n          } catch (error) {\n            console.error('There was an error!', error);\n          }\n        } else {\n          console.log('Form validation failed');\n          return false;\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n\n.title {\n  text-align: left;\n  width: 40%; /* Adjust width as needed */\n  margin-bottom: 20px;\n  line-height: 2.0;\n  font-size: 30px;\n}\n\n.login-page {\n  height: 100vh; /* Full viewport height */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.form-container {\n  width: 600px; /* Adjust width as needed */\n  padding: 20px;\n  background-color: #ffffff; /* White background for form */\n  border-radius: 8px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1); /* Optional: Add a shadow */\n}\n\n.form-container h1 {\n  text-align: center;\n  margin-bottom: 20px;\n}\n</style>\n"],"mappings":";AAyCA,OAAAA,KAAA;AACA,SAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,KAAA;MACAC,IAAA;QACAJ,IAAA;QACAK,KAAA;QACAC,MAAA;QACAC,cAAA;QACAJ,KAAA;MACA;MACAK,UAAA,GACA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,EACA;MACAC,aAAA,GACA;QAAAF,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,EACA;MACAE,KAAA;QACAZ,IAAA,GACA;UAAAa,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAV,KAAA,GACA;UAAAQ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,IAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAT,MAAA,GACA;UAAAO,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAR,cAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAZ,KAAA,GACA;UAAAU,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAE,OAAA;IACA,MAAAC,WAAA;MACA,KAAAC,KAAA,CAAAf,IAAA,CAAAgB,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UAEA,MAAAC,GAAA;YACAtB,IAAA,OAAAI,IAAA,CAAAJ,IAAA;YACAK,KAAA,OAAAD,IAAA,CAAAC,KAAA;YACAC,MAAA,OAAAF,IAAA,CAAAE,MAAA;YACAC,cAAA,OAAAH,IAAA,CAAAG,cAAA;YACAJ,KAAA,OAAAC,IAAA,CAAAD;UACA;UACA;YACAoB,OAAA,CAAAC,GAAA,MAAApB,IAAA;YACAmB,OAAA,CAAAC,GAAA,CAAAF,GAAA;YACA,MAAAG,QAAA,SAAA3B,KAAA,CAAA4B,IAAA,kDAAAJ,GAAA;YACA,IAAAG,QAAA,CAAAE,MAAA;cACAJ,OAAA,CAAAC,GAAA;cACAI,YAAA,CAAAC,OAAA,wBAAAzB,IAAA,CAAAJ,IAAA;cACA4B,YAAA,CAAAC,OAAA,qBAAAzB,IAAA,CAAAD,KAAA;cACA,KAAA2B,OAAA,CAAAC,IAAA;YACA;cACAhC,UAAA,CAAAiC,KAAA;gBACAC,iBAAA;gBACAC,SAAA;gBACAlB,IAAA;cACA;YACA;UAEA,SAAAmB,KAAA;YACAZ,OAAA,CAAAY,KAAA,wBAAAA,KAAA;UACA;QACA;UACAZ,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}